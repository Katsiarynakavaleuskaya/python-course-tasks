# -*- coding: utf-8 -*-
"""05_car_plate_validation

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P7ZCZBzA82QEDS6ESiIzWff34BsQiG7K
"""

# -*- coding: utf-8 -*-
"""
Task 5: Car Plate Validation

Given a list of Russian car plate numbers, validate each one using regular
expressions. A valid plate must follow the format: 1 letter, 3 digits,
2 letters, and a region code (2 or 3 digits). Only specific Cyrillic letters
are allowed (see allowed_letters).

If the plate is valid, print the short number and region in the required format.
Otherwise, print that the plate is not valid.

Examples:
car_ids = ['А222ВС96', 'АБ22ВВ193']

Result:
Plate А222ВС is valid. Region: 96
Plate АБ22ВВ193 is not valid
"""

import re

# Only these Cyrillic letters are allowed in license plates
allowed_letters = 'АВЕКМНОРСТУХ'

# Regular expression to match valid plate numbers
pattern = re.compile(
    fr'^([{allowed_letters}]\d{{3}}[{allowed_letters}]{{2}})(\d{{2,3}})$'
)

car_ids = ['А222ВС96', 'АБ22ВВ193']

for car_id in car_ids:
    match = pattern.match(car_id)
    if match:
        short_id = match.group(1)
        region = match.group(2)
        print(f'Plate {short_id} is valid. Region: {region}')
    else:
        print(f'Plate {car_id} is not valid')
